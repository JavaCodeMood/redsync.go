{"name":"Redsync.go","tagline":"Redis-based distributed mutual exclusion lock implementation for Go","body":"# Redsync.go\r\n\r\nRedsync.go provides a Redis-based distributed mutual exclusion lock implementation for Go as described in [this](http://antirez.com/news/77) blog post. A reference library (by [antirez](https://github.com/antirez)) for Ruby is available at [github.com/antirez/redlock-rb](https://github.com/antirez/redlock-rb).\r\n\r\n## Installation\r\n\r\nInstall Redsync.go using the go get command:\r\n\r\n    $ go get github.com/hjr265/redsync.go/redsync\r\n\r\nThe only dependencies are the Go distribution and `github.com/fzzy/radix/redis`.\r\n\r\n## Documentation\r\n\r\n- [Reference](http://godoc.org/github.com/hjr265/redsync.go/redsync)\r\n\r\n## Contributing\r\n\r\nContributions are welcome.\r\n\r\n## License\r\n\r\nRedsync.go is available under the [Apache License, version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).\r\n\r\n## Disclaimer\r\n\r\nThis code implements an algorithm which is currently a proposal, it was not formally analyzed. Make sure to understand how it works before using it in production environments.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}